{"version":3,"sources":["components/ColourPicker/Marker.jsx","util/canvas.js","components/ColourPicker/Pallette.jsx","components/ColourPicker/HueScale.jsx","components/ColourPicker/ColourSwatch.jsx","components/ColourPicker/ColourPicker.jsx","App.js","reportWebVitals.js","index.js"],"names":["Marker","position","x","y","undefined","style","left","Math","round","top","className","getClickCoords","element","clickEvent","boundingBox","getBoundingClientRect","clientX","clientY","getPixelAsRGBHex","canvas","getContext","getImageData","data","slice","reduce","hex","component","toString","padStart","resetCanvas","ctx","width","height","clearRect","Palette","hue","onColourUpdate","useState","dimensions","setDimensions","markerPosition","setMarkerPosition","ref","useRef","useLayoutEffect","current","offsetWidth","offsetHeight","useEffect","saturationGradient","createLinearGradient","brightnessGradient","addColorStop","fillStyle","fillRect","globalCompositeOperation","renderPalette","colour","onClickCapture","event","coords","HueScale","onHueUpdate","hueGradient","i","renderHueScale","hueValue","background","value","readOnly","disabled","ColourPicker","props","setColour","setHue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5ac1ec4.chunk.js","sourcesContent":["export default function Marker({ position: { x, y } }) {\n    if (y === undefined) return null;\n\n    const style = {\n        ...(x !== 'undefined' ? { left: `${Math.round(x)}px` } : {}), top: `${Math.round(y)}px`\n    };\n\n    return (\n        <div className={'marker'} style={style} />\n    );\n}","export const getClickCoords = (element, clickEvent) => {\n    const boundingBox = element.getBoundingClientRect();\n\n    return { x: clickEvent.clientX - boundingBox.left, y: clickEvent.clientY - boundingBox.top }\n};\n\nexport const getPixelAsRGBHex = (canvas, {x, y}) => {\n    const pixel = canvas.getContext('2d').getImageData(x, y, 1, 1).data;\n    const rgba = pixel.slice(0, 3);\n\n    return rgba.reduce((hex, component) =>  hex + component.toString(16).padStart(2, '0'), '#');\n};\n\nexport const resetCanvas = (ctx, { width, height }) => {\n    ctx.canvas.width = width;\n    ctx.canvas.height = height;\n    ctx.clearRect(0, 0, width, height);\n}","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\n\nimport Marker from \"./Marker\";\nimport { getClickCoords, getPixelAsRGBHex, resetCanvas } from '../../util/canvas';\n\nconst renderPalette = (ctx, hue, { width, height }) => {\n    resetCanvas(ctx, { width, height });\n\n    const saturationGradient = ctx.createLinearGradient(0, 0, width, 0);\n    const brightnessGradient = ctx.createLinearGradient(0, 0, 0, height);\n\n    saturationGradient.addColorStop(0, `hsla(${hue},100%,50%,0)`);\n    saturationGradient.addColorStop(1, `hsla(${hue},100%,50%,1)`);\n    brightnessGradient.addColorStop(0, \"white\")\n    brightnessGradient.addColorStop(1, \"black\");\n\n    // Let the browser/GPU do the work...\n    ctx.fillStyle = saturationGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.globalCompositeOperation = \"multiply\";\n    ctx.fillStyle = brightnessGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.globalCompositeOperation = \"source-over\";\n};\n\nexport default function Palette({ hue, onColourUpdate }) {\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n    const [markerPosition, setMarkerPosition] = useState({ x: 0, y: 0});\n    const ref = useRef(null);\n\n    const selectColour = event => {\n        const canvas = ref.current;\n        const coords = getClickCoords(canvas, event);\n\n        setMarkerPosition(coords);\n        onColourUpdate(getPixelAsRGBHex(canvas, coords));\n    }\n\n    useLayoutEffect(() => ref.current\n        && setDimensions({ width: ref.current.offsetWidth, height: ref.current.offsetHeight }), []);\n    useEffect(() => {\n        if (!ref.current) return;\n\n        const canvas = ref.current;\n\n        renderPalette(canvas.getContext('2d'), hue, dimensions);\n\n        if (hue !== 0) {\n            // The hue has been changed, so we need to update the selected colour.\n            const colour = getPixelAsRGBHex(canvas, markerPosition);\n            onColourUpdate(colour);\n        }\n\n    }, [hue, dimensions, onColourUpdate, markerPosition]);\n\n    return (\n        <div className={'palette'}>\n            <canvas ref={ref} onClickCapture={selectColour} />\n            <Marker position={markerPosition} />\n        </div>\n\n    );\n}","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\n\nimport Marker from \"./Marker\";\nimport { getClickCoords, resetCanvas } from \"../../util/canvas\";\n\nconst renderHueScale = (ctx, { width, height }) => {\n    resetCanvas(ctx, { width, height });\n\n    const hueGradient = ctx.createLinearGradient(0, 0, 0, height);\n\n    for (let i = 0; i <= 360; i++) {\n        hueGradient.addColorStop(1 - i / 360, `hsla(${i},100%,50%,1)`);\n    }\n\n    ctx.fillStyle = hueGradient;\n    ctx.fillRect(0, 0, width, height);\n};\n\nexport default function HueScale({ onHueUpdate }) {\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n    const [markerPosition, setMarkerPosition] = useState({ y: 0 });\n    const ref = useRef(null);\n\n    const inferHue = event => {\n        const { y } = getClickCoords(ref.current, event)\n        const hueValue = Math.round((1 - y / dimensions.height) * 360);\n\n        setMarkerPosition({ y });\n        onHueUpdate(hueValue);\n    }\n\n    useLayoutEffect(() => ref.current\n        && setDimensions({ width: ref.current.offsetWidth, height: ref.current.offsetHeight }), []);\n    useEffect(() => ref.current && renderHueScale(ref.current.getContext('2d'), dimensions), [dimensions]);\n\n    return (\n        <div className={'hueScale'}>\n            <canvas ref={ref} onClickCapture={inferHue} />\n            <Marker position={markerPosition} />\n        </div>\n    );\n}","export default function HueScale({ colour }) {\n    return (\n        <div className={'colourSwatch'}>\n            <div style={{ background: colour }} />\n            <input value={colour} readOnly disabled />\n        </div>\n    );\n}","import React, { useState } from 'react';\n\nimport Palette from './Pallette';\nimport HueScale from './HueScale';\nimport ColourSwatch from './ColourSwatch'\nimport './ColourPicker.css';\n\nexport default function ColourPicker({ onColourUpdate = () => {}, ...props }) {\n    const [colour, setColour] = useState('');\n    const [hue, setHue] = useState(0);\n\n    const onColourUpdateCallback = colour => {\n        onColourUpdate(colour);\n        setColour(colour);\n    }\n    const onHueUpdateCallback = hue => setHue(hue);\n\n    return (\n        <div {...props}>\n            <Palette onColourUpdate={onColourUpdateCallback} hue={hue} />\n            <HueScale onHueUpdate={onHueUpdateCallback} />\n            <ColourSwatch colour={colour} />\n        </div>\n    );\n}","import ColourPicker from \"./components/ColourPicker/ColourPicker\";\nimport './App.css';\n\nexport default function App() {\n  return (\n      <>\n        <h1>Basic Colour Picker Demo</h1>\n        <ColourPicker className={'colourPicker'} />\n      </>\n  );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}